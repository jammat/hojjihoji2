/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hojclient;

import java.awt.event.WindowAdapter;
import java.rmi.*;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.UUID;
import javax.swing.JLabel;
import javax.swing.JToggleButton;

import hojserver.Tehdas;

// Kommentoin pois importit, joita ilmeisesti ei tarvita

/**
 *
 * @author jaanle
 */
public class MainWindow extends javax.swing.JFrame {
	
	private String osoite;
	private String kayttajaNimi;
	private Tehdas tehdas;
	private Registry registry;
	protected boolean online;
	private UUID userId; 

	private JLabel[] siloLabels;
	private JLabel[] processorLabels;
	private JLabel[] tankLabels;
	private JLabel[] conveyerStatus;
	private JLabel[] pumpStatus;
	private JLabel[] processorStatus;
	private JLabel[] processorAmount;
	private JToggleButton[] conveyerStartButtons;
	private JToggleButton[] reserveSiloButtons;
	private JToggleButton[] reserveProcessorButtons;
	private JToggleButton[] startProcessorButtons;
	private JToggleButton[] startPumpButtons;
	private JToggleButton[] reserveTankButtons;
	
    /**
     * Creates new form MainWindow
     */
    public MainWindow(String o) {
    	osoite = o;
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        siloPanel = new javax.swing.JPanel();
        silo1Label = new javax.swing.JLabel();
        reserveSilo1 = new javax.swing.JToggleButton();
        silo1Status = new javax.swing.JLabel();
        silo2Label = new javax.swing.JLabel();
        silo2Status = new javax.swing.JLabel();
        reserveSilo2 = new javax.swing.JToggleButton();
        silo3Label = new javax.swing.JLabel();
        silo3Status = new javax.swing.JLabel();
        reserveSilo3 = new javax.swing.JToggleButton();
        silo4Label = new javax.swing.JLabel();
        silo4Status = new javax.swing.JLabel();
        reserveSilo4 = new javax.swing.JToggleButton();
        loginPanel = new javax.swing.JPanel();
        userNameLabel = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        signIn = new javax.swing.JToggleButton();
        tankPanel = new javax.swing.JPanel();
        tank1Label = new javax.swing.JLabel();
        tank1Status = new javax.swing.JLabel();
        reserveTank1 = new javax.swing.JToggleButton();
        tank2Label = new javax.swing.JLabel();
        tank2Status = new javax.swing.JLabel();
        reserveTank2 = new javax.swing.JToggleButton();
        tank3Label = new javax.swing.JLabel();
        tank3Status = new javax.swing.JLabel();
        reserveTank3 = new javax.swing.JToggleButton();
        tank4Label = new javax.swing.JLabel();
        tank4Status = new javax.swing.JLabel();
        reserveTank4 = new javax.swing.JToggleButton();
        tank5Label = new javax.swing.JLabel();
        tank5Status = new javax.swing.JLabel();
        reserveTank5 = new javax.swing.JToggleButton();
        tank6Label = new javax.swing.JLabel();
        tank6Status = new javax.swing.JLabel();
        reserveTank6 = new javax.swing.JToggleButton();
        tank7Label = new javax.swing.JLabel();
        tank7Status = new javax.swing.JLabel();
        reserveTank7 = new javax.swing.JToggleButton();
        tank8Label = new javax.swing.JLabel();
        tank8Status = new javax.swing.JLabel();
        reserveTank8 = new javax.swing.JToggleButton();
        tank9Label = new javax.swing.JLabel();
        tank9Status = new javax.swing.JLabel();
        reserveTank9 = new javax.swing.JToggleButton();
        tank10Label = new javax.swing.JLabel();
        tank10Status = new javax.swing.JLabel();
        reserveTank10 = new javax.swing.JToggleButton();
        procPanel = new javax.swing.JPanel();
        proc1Status = new javax.swing.JLabel();
        proc1Label = new javax.swing.JLabel();
        startProc1 = new javax.swing.JToggleButton();
        proc2Label = new javax.swing.JLabel();
        reserveProc1 = new javax.swing.JToggleButton();
        reserveProc2 = new javax.swing.JToggleButton();
        startProc2 = new javax.swing.JToggleButton();
        proc2Status = new javax.swing.JLabel();
        proc3Status = new javax.swing.JLabel();
        startProc3 = new javax.swing.JToggleButton();
        reserveProc3 = new javax.swing.JToggleButton();
        proc3Label = new javax.swing.JLabel();
        proc3User = new javax.swing.JLabel();
        proc2User = new javax.swing.JLabel();
        proc1User = new javax.swing.JLabel();
        siloLoadPanel = new javax.swing.JPanel();
        siloLoadLabel = new javax.swing.JLabel();
        startSiloLoad = new javax.swing.JToggleButton();
        siloLoadConvStatus = new javax.swing.JLabel();
        pumpPanel = new javax.swing.JPanel();
        pump1Status = new javax.swing.JLabel();
        pump1Label = new javax.swing.JLabel();
        startPump1 = new javax.swing.JToggleButton();
        pump2Label = new javax.swing.JLabel();
        pump2Status = new javax.swing.JLabel();
        startPump2 = new javax.swing.JToggleButton();
        bpumpPanel = new javax.swing.JPanel();
        bpump1Label = new javax.swing.JLabel();
        bpump1Status = new javax.swing.JLabel();
        startBpump1 = new javax.swing.JToggleButton();
        bpump2Label = new javax.swing.JLabel();
        bpump2Status = new javax.swing.JLabel();
        startBpump2 = new javax.swing.JToggleButton();
        procLoadPanel = new javax.swing.JPanel();
        procLoadLabel1 = new javax.swing.JLabel();
        startProcLoad1 = new javax.swing.JToggleButton();
        ProcLoadConvStatus1 = new javax.swing.JLabel();
        startProcLoad2 = new javax.swing.JToggleButton();
        procLoadConvStatus2 = new javax.swing.JLabel();
        procLoadLabel2 = new javax.swing.JLabel();
        procLoadAmount1 = new javax.swing.JTextField();
        procLoadAmount2 = new javax.swing.JTextField();

        //Listat
        siloLabels = new JLabel[]{silo1Status, silo2Status, silo3Status, silo4Status};
        processorLabels = new JLabel[]{proc1User, proc2User, proc3User};
    	tankLabels = new JLabel[]{tank1Status, tank2Status, tank3Status, tank4Status, tank5Status, tank6Status, tank7Status, tank8Status, tank9Status, tank10Status};
        
    	conveyerStatus = new JLabel[]{siloLoadConvStatus, ProcLoadConvStatus1,procLoadConvStatus2};
    	pumpStatus = new JLabel[]{pump1Status, pump2Status, bpump1Status, bpump2Status};
    	processorStatus = new JLabel[]{proc1Status, proc2Status, proc3Status};
    	processorAmount = new JLabel[]{proc1Label, proc2Label, proc3Label};
    	
    	//Buttons that start the conveyers
    	conveyerStartButtons = new JToggleButton[]{startSiloLoad, startProcLoad1, startProcLoad2};
    	
    	//Buttons that reserve silos
    	reserveSiloButtons = new JToggleButton[]{reserveSilo1, reserveSilo2, reserveSilo3, reserveSilo4};
    	
    	//Buttons that reserve processors
    	reserveProcessorButtons = new JToggleButton[]{reserveProc1, reserveProc2, reserveProc3};
    	
    	//Buttons that start processors
    	startProcessorButtons = new JToggleButton[]{startProc1, startProc2, startProc3};
    	
    	//Buttons that start pumps
    	startPumpButtons = new JToggleButton[]{startPump1, startPump2, startBpump1, startBpump2};
    	
    	//Buttons that reserve tanks
    	reserveTankButtons = new JToggleButton[]{
    			reserveTank1, reserveTank2, reserveTank3, reserveTank4, reserveTank5,
    			reserveTank6, reserveTank7, reserveTank8, reserveTank9, reserveTank10};
    	
    	
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);


        
        siloPanel.setBackground(new java.awt.Color(204, 204, 204));

        silo1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silo1Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/silo.jpg"))); // NOI18N
        silo1Label.setText("Silo 1");
        silo1Label.setFocusable(false);
        silo1Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        silo1Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        reserveSilo1.setText("Reserve");
        reserveSilo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveSilo1ActionPerformed(evt);
            }
        });

        silo1Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silo1Status.setText("0");
        silo1Status.setMaximumSize(new java.awt.Dimension(100, 200));
        silo1Status.setMinimumSize(new java.awt.Dimension(100, 20));
        silo1Status.setPreferredSize(new java.awt.Dimension(100, 20));

        silo2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silo2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/silo.jpg"))); // NOI18N
        silo2Label.setText("Silo 2");
        silo2Label.setFocusable(false);
        silo2Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        silo2Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        silo2Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silo2Status.setText("0");
        silo2Status.setMaximumSize(new java.awt.Dimension(100, 200));
        silo2Status.setMinimumSize(new java.awt.Dimension(100, 20));
        silo2Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveSilo2.setText("Reserve");
        reserveSilo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveSilo2ActionPerformed(evt);
            }
        });

        silo3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silo3Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/silo.jpg"))); // NOI18N
        silo3Label.setText("Silo 3");
        silo3Label.setFocusable(false);
        silo3Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        silo3Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        silo3Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silo3Status.setText("0");
        silo3Status.setMaximumSize(new java.awt.Dimension(100, 200));
        silo3Status.setMinimumSize(new java.awt.Dimension(100, 20));
        silo3Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveSilo3.setText("Reserve");
        reserveSilo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveSilo3ActionPerformed(evt);
            }
        });

        silo4Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silo4Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/silo.jpg"))); // NOI18N
        silo4Label.setText("Silo 4");
        silo4Label.setFocusable(false);
        silo4Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        silo4Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        silo4Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silo4Status.setText("0");
        silo4Status.setMaximumSize(new java.awt.Dimension(100, 200));
        silo4Status.setMinimumSize(new java.awt.Dimension(100, 20));
        silo4Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveSilo4.setText("Reserve");
        reserveSilo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveSilo4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout siloPanelLayout = new javax.swing.GroupLayout(siloPanel);
        siloPanel.setLayout(siloPanelLayout);
        siloPanelLayout.setHorizontalGroup(
            siloPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(siloPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(siloPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(silo1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveSilo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(silo1Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(silo2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(silo2Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveSilo2)
                    .addComponent(silo3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(silo3Status, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveSilo3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(silo4Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(silo4Status, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(reserveSilo4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        siloPanelLayout.setVerticalGroup(
            siloPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(siloPanelLayout.createSequentialGroup()
                .addComponent(silo1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(silo1Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reserveSilo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(silo2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(silo2Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reserveSilo2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(silo3Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(silo3Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(reserveSilo3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(silo4Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(silo4Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reserveSilo4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        userNameLabel.setText("Username");

        userName.setToolTipText("");

        signIn.setText("Log in");
        signIn.setToolTipText("");
        signIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signInActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(signIn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userNameLabel)
                    .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(signIn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tankPanel.setBackground(new java.awt.Color(204, 204, 204));

        tank1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank1Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/tank.jpg"))); // NOI18N
        tank1Label.setText("Tank 1");
        tank1Label.setFocusable(false);
        tank1Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tank1Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        tank1Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank1Status.setText("0");
        tank1Status.setMaximumSize(new java.awt.Dimension(100, 200));
        tank1Status.setMinimumSize(new java.awt.Dimension(100, 20));
        tank1Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveTank1.setText("Reserve");
        reserveTank1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveTank1ActionPerformed(evt);
            }
        });

        tank2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/tank.jpg"))); // NOI18N
        tank2Label.setText("Tank 2");
        tank2Label.setFocusable(false);
        tank2Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tank2Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        tank2Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank2Status.setText("0");
        tank2Status.setMaximumSize(new java.awt.Dimension(100, 200));
        tank2Status.setMinimumSize(new java.awt.Dimension(100, 20));
        tank2Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveTank2.setText("Reserve");
        reserveTank2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveTank2ActionPerformed(evt);
            }
        });

        tank3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank3Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/tank.jpg"))); // NOI18N
        tank3Label.setText("Tank 3");
        tank3Label.setFocusable(false);
        tank3Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tank3Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        tank3Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank3Status.setText("0");
        tank3Status.setMaximumSize(new java.awt.Dimension(100, 200));
        tank3Status.setMinimumSize(new java.awt.Dimension(100, 20));
        tank3Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveTank3.setText("Reserve");
        reserveTank3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveTank3ActionPerformed(evt);
            }
        });

        tank4Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank4Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/tank.jpg"))); // NOI18N
        tank4Label.setText("Tank 4");
        tank4Label.setFocusable(false);
        tank4Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tank4Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        tank4Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank4Status.setText("0");
        tank4Status.setMaximumSize(new java.awt.Dimension(100, 200));
        tank4Status.setMinimumSize(new java.awt.Dimension(100, 20));
        tank4Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveTank4.setText("Reserve");
        reserveTank4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveTank4ActionPerformed(evt);
            }
        });

        tank5Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank5Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/tank.jpg"))); // NOI18N
        tank5Label.setText("Tank 5");
        tank5Label.setFocusable(false);
        tank5Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tank5Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        tank5Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank5Status.setText("0");
        tank5Status.setMaximumSize(new java.awt.Dimension(100, 200));
        tank5Status.setMinimumSize(new java.awt.Dimension(100, 20));
        tank5Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveTank5.setText("Reserve");
        reserveTank5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveTank5ActionPerformed(evt);
            }
        });

        tank6Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank6Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/tank.jpg"))); // NOI18N
        tank6Label.setText("Tank 6");
        tank6Label.setFocusable(false);
        tank6Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tank6Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        tank6Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank6Status.setText("0");
        tank6Status.setMaximumSize(new java.awt.Dimension(100, 200));
        tank6Status.setMinimumSize(new java.awt.Dimension(100, 20));
        tank6Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveTank6.setText("Reserve");
        reserveTank6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveTank6ActionPerformed(evt);
            }
        });

        tank7Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank7Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/tank.jpg"))); // NOI18N
        tank7Label.setText("Tank 7");
        tank7Label.setFocusable(false);
        tank7Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tank7Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        tank7Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank7Status.setText("0");
        tank7Status.setMaximumSize(new java.awt.Dimension(100, 200));
        tank7Status.setMinimumSize(new java.awt.Dimension(100, 20));
        tank7Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveTank7.setText("Reserve");
        reserveTank7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveTank7ActionPerformed(evt);
            }
        });

        tank8Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank8Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/tank.jpg"))); // NOI18N
        tank8Label.setText("Tank 8");
        tank8Label.setFocusable(false);
        tank8Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tank8Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        tank8Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank8Status.setText("0");
        tank8Status.setMaximumSize(new java.awt.Dimension(100, 200));
        tank8Status.setMinimumSize(new java.awt.Dimension(100, 20));
        tank8Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveTank8.setText("Reserve");
        reserveTank8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveTank8ActionPerformed(evt);
            }
        });

        tank9Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank9Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/tank.jpg"))); // NOI18N
        tank9Label.setText("Tank 9");
        tank9Label.setFocusable(false);
        tank9Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tank9Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        tank9Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank9Status.setText("0");
        tank9Status.setMaximumSize(new java.awt.Dimension(100, 200));
        tank9Status.setMinimumSize(new java.awt.Dimension(100, 20));
        tank9Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveTank9.setText("Reserve");
        reserveTank9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveTank9ActionPerformed(evt);
            }
        });

        tank10Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank10Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/tank.jpg"))); // NOI18N
        tank10Label.setText("Tank 10");
        tank10Label.setFocusable(false);
        tank10Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tank10Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        tank10Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tank10Status.setText("0");
        tank10Status.setMaximumSize(new java.awt.Dimension(100, 200));
        tank10Status.setMinimumSize(new java.awt.Dimension(100, 20));
        tank10Status.setPreferredSize(new java.awt.Dimension(100, 20));

        reserveTank10.setText("Reserve");
        reserveTank10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveTank10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tankPanelLayout = new javax.swing.GroupLayout(tankPanel);
        tankPanel.setLayout(tankPanelLayout);
        tankPanelLayout.setHorizontalGroup(
            tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tankPanelLayout.createSequentialGroup()
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(tank1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tank1Status, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(reserveTank1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tank2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tank2Status, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(reserveTank2)
                    .addComponent(tank3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank3Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveTank3)
                    .addComponent(tank4Label, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank4Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveTank4)
                    .addComponent(tank5Label, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank5Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveTank5))
                .addGap(10, 10, 10)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(tank6Label, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank6Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveTank6)
                    .addComponent(tank7Label, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank7Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveTank7)
                    .addComponent(tank8Label)
                    .addComponent(tank8Status, javax.swing.GroupLayout.PREFERRED_SIZE, 77, Short.MAX_VALUE)
                    .addComponent(reserveTank8)
                    .addComponent(tank9Label, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank9Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveTank9)
                    .addComponent(tank10Label, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank10Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveTank10)))
        );
        tankPanelLayout.setVerticalGroup(
            tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tankPanelLayout.createSequentialGroup()
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tank1Label)
                    .addComponent(tank6Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tank1Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank6Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserveTank1)
                    .addComponent(reserveTank6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tank2Label)
                    .addComponent(tank7Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tankPanelLayout.createSequentialGroup()
                        .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tank2Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tank7Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reserveTank2)
                            .addComponent(reserveTank7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tank3Label))
                    .addComponent(tank8Label, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tank3Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank8Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserveTank3)
                    .addComponent(reserveTank8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tank4Label)
                    .addComponent(tank9Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tank4Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank9Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserveTank4)
                    .addComponent(reserveTank9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tank10Label)
                    .addComponent(tank5Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tank10Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tank5Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserveTank10)
                    .addComponent(reserveTank5)))
        );

        procPanel.setBackground(new java.awt.Color(204, 204, 204));

        proc1Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proc1Status.setText("Running");
        proc1Status.setMaximumSize(new java.awt.Dimension(100, 200));
        proc1Status.setMinimumSize(new java.awt.Dimension(100, 20));
        proc1Status.setPreferredSize(new java.awt.Dimension(100, 20));

        proc1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proc1Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/processor.jpg"))); // NOI18N
        proc1Label.setText("Processor 1");
        proc1Label.setFocusable(false);
        proc1Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        proc1Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        startProc1.setText("Start");
        startProc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startProc1ActionPerformed(evt);
            }
        });

        proc2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proc2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/processor.jpg"))); // NOI18N
        proc2Label.setText("Processor 2");
        proc2Label.setFocusable(false);
        proc2Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        proc2Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        reserveProc1.setText("Reserve");
        reserveProc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveProc1ActionPerformed(evt);
            }
        });

        reserveProc2.setText("Reserve");
        reserveProc2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveProc2ActionPerformed(evt);
            }
        });

        startProc2.setText("Start");
        startProc2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startProc2ActionPerformed(evt);
            }
        });

        proc2Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proc2Status.setText("Running");
        proc2Status.setMaximumSize(new java.awt.Dimension(100, 200));
        proc2Status.setMinimumSize(new java.awt.Dimension(100, 20));
        proc2Status.setPreferredSize(new java.awt.Dimension(100, 20));

        proc3Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proc3Status.setText("Running");
        proc3Status.setMaximumSize(new java.awt.Dimension(100, 200));
        proc3Status.setMinimumSize(new java.awt.Dimension(100, 20));
        proc3Status.setPreferredSize(new java.awt.Dimension(100, 20));

        startProc3.setText("Start");
        startProc3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startProc3ActionPerformed(evt);
            }
        });

        reserveProc3.setText("Reserve");
        reserveProc3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveProc3ActionPerformed(evt);
            }
        });

        proc3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proc3Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/processor.jpg"))); // NOI18N
        proc3Label.setText("Processor 3");
        proc3Label.setFocusable(false);
        proc3Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        proc3Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        proc3User.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proc3User.setText("User");

        proc2User.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proc2User.setText("User");

        proc1User.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proc1User.setText("User");

        javax.swing.GroupLayout procPanelLayout = new javax.swing.GroupLayout(procPanel);
        procPanel.setLayout(procPanelLayout);
        procPanelLayout.setHorizontalGroup(
            procPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(procPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(proc1Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(proc1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startProc1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(proc2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reserveProc1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reserveProc2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startProc2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(proc2Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(proc3Status, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(startProc3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reserveProc3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(proc3Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(proc3User, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(proc2User, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(proc1User, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        procPanelLayout.setVerticalGroup(
            procPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, procPanelLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(proc1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proc1User, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proc1Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reserveProc1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startProc1)
                .addGap(18, 18, 18)
                .addComponent(proc2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proc2User, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proc2Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reserveProc2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startProc2)
                .addGap(29, 29, 29)
                .addComponent(proc3Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proc3User, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proc3Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reserveProc3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startProc3)
                .addContainerGap())
        );

        siloLoadLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        siloLoadLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/conveyor.jpg"))); // NOI18N
        siloLoadLabel.setText("Silo loading");
        siloLoadLabel.setFocusable(false);
        siloLoadLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        siloLoadLabel.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        startSiloLoad.setText("Start");
        startSiloLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSiloLoadActionPerformed(evt);
            }
        });

        siloLoadConvStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        siloLoadConvStatus.setText("Running");
        siloLoadConvStatus.setMaximumSize(new java.awt.Dimension(100, 200));
        siloLoadConvStatus.setMinimumSize(new java.awt.Dimension(100, 20));
        siloLoadConvStatus.setPreferredSize(new java.awt.Dimension(100, 20));

        javax.swing.GroupLayout siloLoadPanelLayout = new javax.swing.GroupLayout(siloLoadPanel);
        siloLoadPanel.setLayout(siloLoadPanelLayout);
        siloLoadPanelLayout.setHorizontalGroup(
            siloLoadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(siloLoadPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(siloLoadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(siloLoadLabel)
                    .addComponent(startSiloLoad)
                    .addComponent(siloLoadConvStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        siloLoadPanelLayout.setVerticalGroup(
            siloLoadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, siloLoadPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(siloLoadLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(siloLoadConvStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startSiloLoad)
                .addContainerGap())
        );

        siloLoadConvStatus.getAccessibleContext().setAccessibleName("SiloLoadConvStatus");

        pump1Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pump1Status.setText("Running");
        pump1Status.setMaximumSize(new java.awt.Dimension(100, 200));
        pump1Status.setMinimumSize(new java.awt.Dimension(100, 20));
        pump1Status.setPreferredSize(new java.awt.Dimension(100, 20));

        pump1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pump1Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/pump.jpg"))); // NOI18N
        pump1Label.setText("Pump 1");
        pump1Label.setFocusable(false);
        pump1Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pump1Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        startPump1.setText("Start");
        startPump1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startPump1ActionPerformed(evt);
            }
        });

        pump2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pump2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/pump.jpg"))); // NOI18N
        pump2Label.setText("Pump 2");
        pump2Label.setFocusable(false);
        pump2Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pump2Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        pump2Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pump2Status.setText("Running");
        pump2Status.setMaximumSize(new java.awt.Dimension(100, 200));
        pump2Status.setMinimumSize(new java.awt.Dimension(100, 20));
        pump2Status.setPreferredSize(new java.awt.Dimension(100, 20));

        startPump2.setText("Start");
        startPump2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startPump2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pumpPanelLayout = new javax.swing.GroupLayout(pumpPanel);
        pumpPanel.setLayout(pumpPanelLayout);
        pumpPanelLayout.setHorizontalGroup(
            pumpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pumpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(pump1Status, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(pump1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(startPump1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(pump2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(pump2Status, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(startPump2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pumpPanelLayout.setVerticalGroup(
            pumpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pumpPanelLayout.createSequentialGroup()
                .addComponent(pump1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pump1Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startPump1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pump2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pump2Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startPump2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bpump1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpump1Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/pump.jpg"))); // NOI18N
        bpump1Label.setText("Bottle pump 1");
        bpump1Label.setFocusable(false);
        bpump1Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bpump1Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        bpump1Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpump1Status.setText("Running");
        bpump1Status.setMaximumSize(new java.awt.Dimension(100, 200));
        bpump1Status.setMinimumSize(new java.awt.Dimension(100, 20));
        bpump1Status.setPreferredSize(new java.awt.Dimension(100, 20));

        startBpump1.setText("Start");
        startBpump1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBpump1ActionPerformed(evt);
            }
        });

        bpump2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpump2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/pump.jpg"))); // NOI18N
        bpump2Label.setText("Bottle pump 2");
        bpump2Label.setFocusable(false);
        bpump2Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bpump2Label.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        bpump2Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bpump2Status.setText("Running");
        bpump2Status.setMaximumSize(new java.awt.Dimension(100, 200));
        bpump2Status.setMinimumSize(new java.awt.Dimension(100, 20));
        bpump2Status.setPreferredSize(new java.awt.Dimension(100, 20));

        startBpump2.setText("Start");
        startBpump2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBpump2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bpumpPanelLayout = new javax.swing.GroupLayout(bpumpPanel);
        bpumpPanel.setLayout(bpumpPanelLayout);
        bpumpPanelLayout.setHorizontalGroup(
            bpumpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bpumpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(bpump1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(bpump1Status, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(startBpump1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(bpump2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(bpump2Status, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(startBpump2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        bpumpPanelLayout.setVerticalGroup(
            bpumpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bpumpPanelLayout.createSequentialGroup()
                .addComponent(bpump1Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bpump1Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startBpump1)
                .addGap(18, 18, 18)
                .addComponent(bpump2Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bpump2Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startBpump2))
        );

        procLoadLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        procLoadLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/conveyor.jpg"))); // NOI18N
        procLoadLabel1.setText("Processor loading");
        procLoadLabel1.setFocusable(false);
        procLoadLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        procLoadLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        startProcLoad1.setText("Start");
        startProcLoad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startProcLoad1ActionPerformed(evt);
            }
        });

        ProcLoadConvStatus1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ProcLoadConvStatus1.setText("Running");
        ProcLoadConvStatus1.setMaximumSize(new java.awt.Dimension(100, 200));
        ProcLoadConvStatus1.setMinimumSize(new java.awt.Dimension(100, 20));
        ProcLoadConvStatus1.setPreferredSize(new java.awt.Dimension(100, 20));

        startProcLoad2.setText("Start");
        startProcLoad2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startProcLoad2ActionPerformed(evt);
            }
        });

        procLoadConvStatus2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        procLoadConvStatus2.setText("Running");
        procLoadConvStatus2.setMaximumSize(new java.awt.Dimension(100, 200));
        procLoadConvStatus2.setMinimumSize(new java.awt.Dimension(100, 20));
        procLoadConvStatus2.setPreferredSize(new java.awt.Dimension(100, 20));

        procLoadLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        procLoadLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hojclient/icons/conveyor.jpg"))); // NOI18N
        procLoadLabel2.setText("Processor loading");
        procLoadLabel2.setFocusable(false);
        procLoadLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        procLoadLabel2.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        procLoadAmount1.setPreferredSize(new java.awt.Dimension(65, 20));
        procLoadAmount1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procLoadAmount1ActionPerformed(evt);
            }
        });

        procLoadAmount2.setPreferredSize(new java.awt.Dimension(65, 20));
        procLoadAmount2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procLoadAmount2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout procLoadPanelLayout = new javax.swing.GroupLayout(procLoadPanel);
        procLoadPanel.setLayout(procLoadPanelLayout);
        procLoadPanelLayout.setHorizontalGroup(
            procLoadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(procLoadPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(procLoadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(procLoadLabel1)
                    .addComponent(procLoadAmount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProcLoadConvStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startProcLoad1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(procLoadLabel2)
                    .addComponent(procLoadAmount2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(procLoadConvStatus2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startProcLoad2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        procLoadPanelLayout.setVerticalGroup(
            procLoadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(procLoadPanelLayout.createSequentialGroup()
                .addComponent(procLoadLabel1)
                .addGap(7, 7, 7)
                .addComponent(procLoadAmount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProcLoadConvStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startProcLoad1)
                .addGap(32, 32, 32)
                .addComponent(procLoadLabel2)
                .addGap(8, 8, 8)
                .addComponent(procLoadAmount2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(procLoadConvStatus2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startProcLoad2)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(siloLoadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(siloPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(procLoadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)))
                .addComponent(procPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(pumpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(tankPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bpumpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(siloPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(217, 217, 217)
                                .addComponent(siloLoadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(procLoadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(pumpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tankPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(procPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(bpumpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    // ****************** KUUNTELIJAT ****************** //

    // --------------- START SILO CONVEYER --------------------
    private void startSiloLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSiloLoadActionPerformed
        // MitÃ¤ tehdÃ¤Ã¤n, kun siilojen tÃ¤ytÃ¶n ruuvikuljetin kÃ¤ynnistetÃ¤Ã¤n?
    	if (signIn.isSelected()){
    		if (conveyerStartButtons[0].isSelected()){
    			try{
    				tehdas.ruuvihihnanKaynnistys();
    			}catch (RemoteException e) {System.out.println(e);}
    		}//conv
    		else{
    			try{
    			tehdas.ruuvihihnanKaynnistysVapautus();
    			} catch (RemoteException e) {System.out.println(e);}
    		}
    	}//if log
    }//GEN-LAST:event_startSiloLoadActionPerformed

    // --------------- SIGN IN & OUT -------------------------
    private void signInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signInActionPerformed
        // MitÃ¤ tehdÃ¤Ã¤n kun kÃ¤yttÃ¤jÃ¤ kirjautuu
    	
    	// Onko jo login painettu?
    	if (signIn.isSelected()){
    		if (userName.getText().contentEquals("") || userName.getText() == null){
    			System.out.println("Anna kÃ¤yttÃ¤jÃ¤nimi!");
    			signIn.setSelected(false);
    		}// if nimi kirjoitettu
    		else if (userName.getText().length() >= 20){
    			System.out.println("KÃ¤yttÃ¤jÃ¤nimen tulee olla alle 20 merkkiÃ¤!");
    			signIn.setSelected(false);
    		}
    		else{
		    	String RMIosoite ="tehdas";	
		    	try {
		    		registry = LocateRegistry.getRegistry(osoite, 2020);
		    		tehdas = (Tehdas) registry.lookup(RMIosoite); 	
		    	} catch (Exception e){System.out.println(e);}
		    	
		    	// Otetaan kirjoitettu kÃ¤yttÃ¤jÃ¤nimi talteen
		    	kayttajaNimi = userName.getText();
		    	
		    	signIn.setText("Log out");

		    	try{
		    		//Otetaan kÃ¤yttÃ¤jÃ¤n henk. koht. userId talteen
		    		userId = tehdas.login(kayttajaNimi);
		    	}catch (RemoteException e){
		    		System.out.println(e);
		    	}
		    	
		    	 //HANDLING EXIT BY PRESSING X
		        addWindowListener(new WindowAdapter(){
		        	public void windowClosing(WindowEvent e ) 
		            {
		              try {
		            	//Kirjataan kÃ¤yttÃ¤jÃ¤ ulos  
						tehdas.logout(userId);
						
					} catch (RemoteException e1) {
						e1.printStackTrace();
					}
		              dispose() ;
		              System.exit( 0 );
		            }
		        });
		    	
		    	online = true;
		    	new BackgroundUpdater(this).start();
		    	
    		}//else
    	} // if signin
    	
    	// ULOSKIRJAUTUMINEN
    	// Jos login nappi on alhaalla niin Uloskirjaus
    	else{
    		try{
    			tehdas.logout(userId);
    		} catch(RemoteException e){
    			e.printStackTrace();
    		}
    		registry = null;		//KeskeytetÃ¤Ã¤n yhteys ja ...
    		online = false;			//...PysÃ¤ytetÃ¤Ã¤n BackgroundUpdater thread	
    		
    		signIn.setText("Log in");
    		
    	}
    	
    	
    }//GEN-LAST:event_signInActionPerformed

    //---------------- START/STOP PROCESSOR CONVEYER 1 --------------------
    private void startProcLoad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startProcLoad1ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun keittimen tÃ¤ytÃ¶n ruuvikuljetin 1 kÃ¤ynnistetÃ¤Ã¤n
    	if (signIn.isSelected()){
    		if (conveyerStartButtons[1].isSelected()){
    			
    			int maaraInt;
    			String maara = procLoadAmount1.getText();
    			
    			// Annettiinko mitÃ¤Ã¤n arvoa?
    			if (maara.contentEquals("")){
    				maaraInt = -1;
    			}
    			else{
		    		try {
		    			maaraInt = Integer.parseInt(maara);
		   			} catch (NumberFormatException e) {
		    			maaraInt = -1;
		    			System.out.println("Load processor: Not valid value!");
		    		}
    			}
    			try{
    				tehdas.prosessorinLataus(1, maaraInt);
    			}catch (RemoteException e) {System.out.println(e);}
    		}
    		else{
    			try{
    			tehdas.prosessorinLatausVapautus(1);
    			} catch (RemoteException e) {System.out.println(e);}
    		}// if start
    	}// if log
    }//GEN-LAST:event_startProcLoad2ActionPerformed

    //---------------- START/STOP PROCESSOR CONVEYER 2 --------------------
    private void startProcLoad2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startProcLoad2ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun keittimen tÃ¤ytÃ¶n ruuvikuljetin 2 kÃ¤ynnistetÃ¤Ã¤n
    	if (signIn.isSelected()){
    		if (conveyerStartButtons[2].isSelected()){
    			
    			int maaraInt;
    			String maara = procLoadAmount2.getText();
    			
    			// Annettiinko mitÃ¤Ã¤n arvoa?
    			if (maara.contentEquals("")){
    				maaraInt = -1;
    			}
    			else{
		    		try {
		    			maaraInt = Integer.parseInt(maara);
		   			} catch (NumberFormatException e) {
		    			maaraInt = -1;
		    			System.out.println("Load processor: Not valid value!");
		    		}
    			}
    			try{
    				tehdas.prosessorinLataus(2, maaraInt);
    			}catch (RemoteException e) {System.out.println(e);}
    		}
    		else{
    			try{
    			tehdas.prosessorinLatausVapautus(2);
    			} catch (RemoteException e) {System.out.println(e);}
    		}// if start
    	}// if log
    }//GEN-LAST:event_startProcLoad2ActionPerformed

  //---------------- RESERVE/UNRESERVE SILO 1 --------------------
    private void reserveSilo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveSilo1ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun siilo1 varataan?
    	if (signIn.isSelected()){
    		if (reserveSiloButtons[0].isSelected()){
    			try{
    				tehdas.siilonVaraus(0);
    			}catch (RemoteException e) {System.out.println(e);}
    		}
			else{
				try{
					tehdas.siilonVarausVapautus(0);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}
    }//GEN-LAST:event_reserveSilo1ActionPerformed

    //---------------- RESERVE/UNRESERVE SILO 2 --------------------
    private void reserveSilo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveSilo2ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun siilo2 varataan?
    	if (signIn.isSelected()){
    		if (reserveSiloButtons[1].isSelected()){
    			try{
    				tehdas.siilonVaraus(1);
    			}catch (RemoteException e) {System.out.println(e);}
    		}// if res 
			else{
				try{
					tehdas.siilonVarausVapautus(1);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}
    }//GEN-LAST:event_reserveSilo2ActionPerformed

    //---------------- RESERVE/UNRESERVE SILO 3 --------------------    
    private void reserveSilo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveSilo3ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun siilo3 varataan?
    	if (signIn.isSelected()){
    		if (reserveSiloButtons[2].isSelected()){
    			try{
    				tehdas.siilonVaraus(2);
    			}catch (RemoteException e) {System.out.println(e);}
    		}// if res
			else{
				try{
					tehdas.siilonVarausVapautus(2);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}
    }//GEN-LAST:event_reserveSilo3ActionPerformed

    //---------------- RESERVE/UNRESERVE SILO 4 --------------------    
    private void reserveSilo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveSilo4ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun siilo4 varataan?
    	if (signIn.isSelected()){
    		if (reserveSiloButtons[3].isSelected()){
    			try{
    				tehdas.siilonVaraus(3);
    			}catch (RemoteException e) {System.out.println(e);}
    		}// if res
			else{
				try{
					tehdas.siilonVarausVapautus(3);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}
    }//GEN-LAST:event_reserveSilo4ActionPerformed

    //---------------- RESERVE/UNRESERVE PROCESSOR 1 --------------------
    private void reserveProc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveProc1ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun keitin1 varataan?
    	if (signIn.isSelected()){
    		if (reserveProcessorButtons[0].isSelected()){
	    		try{
	    			tehdas.prosessorinVaraus(0, userId);
	    		}catch (RemoteException e) {System.out.println(e);}
	    	}// if res
			else{
				try{
					tehdas.prosessorinVarausVapautus(0, userId);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}// if log
    }//GEN-LAST:event_reserveProc1ActionPerformed

    //---------------- START/STOP PROCESSOR 1 --------------------
    private void startProc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startProc1ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun keitin1 kÃ¤ynnistetÃ¤Ã¤n?
    	if (signIn.isSelected()){
    		if (startProcessorButtons[0].isSelected()){
	    		try{
	    			tehdas.prosessorinKaynnistys(0, userId);;
	    		}catch (RemoteException e) {System.out.println(e);}
	    	}// if res
			else{
				try{
					tehdas.prosessorinKaynnistysVapautus(0);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}// if log
    }//GEN-LAST:event_startProc1ActionPerformed

    //---------------- RESERVE/UNRESERVE PROCESSOR 2 --------------------
    private void reserveProc2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveProc2ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun keitin2 varataan?
    	if (signIn.isSelected()){
    		if (reserveProcessorButtons[1].isSelected()){
	    		try{
	    			tehdas.prosessorinVaraus(1, userId);
	    		}catch (RemoteException e) {System.out.println(e);}
	    	}// if res
			else{
				try{
					tehdas.prosessorinVarausVapautus(1, userId);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}// if log
    }//GEN-LAST:event_reserveProc2ActionPerformed

    //---------------- START/STOP PROCESSOR 2 --------------------
    private void startProc2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startProc2ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun keitin2 kÃ¤ynnistetÃ¤Ã¤n?
    	if (signIn.isSelected()){
    		if (startProcessorButtons[1].isSelected()){
	    		try{
	    			tehdas.prosessorinKaynnistys(1, userId);;
	    		}catch (RemoteException e) {System.out.println(e);}
	    	}// if res
			else{
				try{
					tehdas.prosessorinKaynnistysVapautus(1);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}// if log
    }//GEN-LAST:event_startProc2ActionPerformed

    //---------------- RESERVE/UNRESERVE PROCESSOR 3 --------------------
    private void reserveProc3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveProc3ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun keitin3 varataan?
    	if (signIn.isSelected()){
    		if (reserveProcessorButtons[2].isSelected()){
	    		try{
	    			tehdas.prosessorinVaraus(2, userId);
	    		}catch (RemoteException e) {System.out.println(e);}
	    	}// if res
			else{
				try{
					tehdas.prosessorinVarausVapautus(2, userId);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}// if log
    }//GEN-LAST:event_reserveProc3ActionPerformed

    //---------------- START/STOP PROCESSOR 3 --------------------
    private void startProc3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startProc3ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun keitin3 kÃ¤ynnistetÃ¤Ã¤n?
    	if (signIn.isSelected()){
    		if (startProcessorButtons[2].isSelected()){
	    		try{
	    			tehdas.prosessorinKaynnistys(2, userId);;
	    		}catch (RemoteException e) {System.out.println(e);}
	    	}// if res
			else{
				try{
					tehdas.prosessorinKaynnistysVapautus(2);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}// if log
    }//GEN-LAST:event_startProc3ActionPerformed

  //---------------- START/STOP PROCESSOR PUMP 1 --------------------
    private void startPump1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPump1ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun pumppu1 kÃ¤ynnistetÃ¤Ã¤n?
    	if (signIn.isSelected()){
    		if (startPumpButtons[0].isSelected()){
    			try{
	    			tehdas.sailoidenTaytto(0);
	    		}catch (RemoteException e) {System.out.println(e);}
    		}// if start
			else{
				try{
					tehdas.sailoidenTayttoVapautus(0);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}// if log
    }//GEN-LAST:event_startPump1ActionPerformed

    //---------------- START/STOP PROCESSOR PUMP 2 --------------------
    private void startPump2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPump2ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun pumppu2 kÃ¤ynnistetÃ¤Ã¤n?
    	if (signIn.isSelected()){
    		if (startPumpButtons[1].isSelected()){
    			try{
	    			tehdas.sailoidenTaytto(1);
	    		}catch (RemoteException e) {System.out.println(e);}
    		}// if start
			else{
				try{
					tehdas.sailoidenTayttoVapautus(1);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
    	}// if log
    }//GEN-LAST:event_startPump2ActionPerformed

    //---------------- START/STOP BOTTLE PUMP 1 --------------------
    private void startBpump1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBpump1ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun pumppu1 pullotukseen kÃ¤ynnistetÃ¤Ã¤n?
    	if (signIn.isSelected()){
	    	if(startPumpButtons[2].isSelected()){
	    		try{
	    			tehdas.pullojenTaytto(2);
	    		}catch (RemoteException e) {System.out.println(e);}
	    	}// if start
			else{
				try{
					tehdas.pullojenTayttoVapautus(2);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
	    }// if log
    }//GEN-LAST:event_startBpump1ActionPerformed

    //---------------- START/STOP BOTTLE PUMP 2 --------------------
    private void startBpump2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBpump2ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun pumppu2 pullotukseen kÃ¤ynnistetÃ¤Ã¤n?
    	if (signIn.isSelected()){
	    	if(startPumpButtons[3].isSelected()){
	    		try{
	    			tehdas.pullojenTaytto(3);
	    		}catch (RemoteException e) {System.out.println(e);}
	    	}// if start
			else{
				try{
					tehdas.pullojenTayttoVapautus(3);
				} catch (RemoteException e) {System.out.println(e);}
			}// else
	    }// if log
    }//GEN-LAST:event_startBpump2ActionPerformed

    //---------------- RESERVE/UNRESERVE TANK 1 --------------------
    private void reserveTank1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveTank1ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun sÃ¤iliÃ¶1 varataan?
	    	if (signIn.isSelected()){
	    		if (reserveTankButtons[0].isSelected()){
	    			try{
	    				tehdas.sailionVaraus(0);
	    			}catch (RemoteException e) {System.out.println(e);}
	    		} //if start
	    		else{
					try{
						tehdas.sailionVarausVapautus(0);
					} catch (RemoteException e) {System.out.println(e);}
				}//else	
	    }// if log
    }//GEN-LAST:event_reserveTank1ActionPerformed

    //---------------- RESERVE/UNRESERVE TANK 2 --------------------
    private void reserveTank2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveTank2ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun sÃ¤iliÃ¶2 varataan?
    	if (signIn.isSelected()){
    		if (reserveTankButtons[1].isSelected()){
    			try{
    				tehdas.sailionVaraus(1);
    			}catch (RemoteException e) {System.out.println(e);}
    		} //if start
    		else{
				try{
					tehdas.sailionVarausVapautus(1);
				} catch (RemoteException e) {System.out.println(e);}
			}//else	
    }// if log
    }//GEN-LAST:event_reserveTank2ActionPerformed

    //---------------- RESERVE/UNRESERVE TANK 3 --------------------
    private void reserveTank3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveTank3ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun sÃ¤iliÃ¶3 varataan?
    	if (signIn.isSelected()){
    		if (reserveTankButtons[2].isSelected()){
    			try{
    				tehdas.sailionVaraus(2);
    			}catch (RemoteException e) {System.out.println(e);}
    		} //if start
    		else{
				try{
					tehdas.sailionVarausVapautus(2);
				} catch (RemoteException e) {System.out.println(e);}
			}//else	
    }// if log
    }//GEN-LAST:event_reserveTank3ActionPerformed

    //---------------- RESERVE/UNRESERVE TANK 4 --------------------
    private void reserveTank4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveTank4ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun sÃ¤iliÃ¶4 varataan?
    	if (signIn.isSelected()){
    		if (reserveTankButtons[3].isSelected()){
    			try{
    				tehdas.sailionVaraus(3);
    			}catch (RemoteException e) {System.out.println(e);}
    		} //if start
    		else{
				try{
					tehdas.sailionVarausVapautus(3);
				} catch (RemoteException e) {System.out.println(e);}
			}//else	
    }// if log
    }//GEN-LAST:event_reserveTank4ActionPerformed

    //---------------- RESERVE/UNRESERVE TANK 5 --------------------
    private void reserveTank5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveTank5ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun sÃ¤iliÃ¶5 varataan?
    	if (signIn.isSelected()){
    		if (reserveTankButtons[4].isSelected()){
    			try{
    				tehdas.sailionVaraus(4);
    			}catch (RemoteException e) {System.out.println(e);}
    		} //if start
    		else{
				try{
					tehdas.sailionVarausVapautus(4);
				} catch (RemoteException e) {System.out.println(e);}
			}//else	
    }// if log
    }//GEN-LAST:event_reserveTank5ActionPerformed

    //---------------- RESERVE/UNRESERVE TANK 6 --------------------
    private void reserveTank6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveTank6ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun sÃ¤iliÃ¶6 varataan?
    	if (signIn.isSelected()){
    		if (reserveTankButtons[5].isSelected()){
    			try{
    				tehdas.sailionVaraus(5);
    			}catch (RemoteException e) {System.out.println(e);}
    		} //if start
    		else{
				try{
					tehdas.sailionVarausVapautus(5);
				} catch (RemoteException e) {System.out.println(e);}
			}//else	
    }// if log
    }//GEN-LAST:event_reserveTank6ActionPerformed

    //---------------- RESERVE/UNRESERVE TANK 7 --------------------
    private void reserveTank7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveTank7ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun sÃ¤iliÃ¶7 varataan?
    	if (signIn.isSelected()){
    		if (reserveTankButtons[6].isSelected()){
    			try{
    				tehdas.sailionVaraus(6);
    			}catch (RemoteException e) {System.out.println(e);}
    		} //if start
    		else{
				try{
					tehdas.sailionVarausVapautus(6);
				} catch (RemoteException e) {System.out.println(e);}
			}//else	
    }// if log
    }//GEN-LAST:event_reserveTank7ActionPerformed

    //---------------- RESERVE/UNRESERVE TANK 8 --------------------
    private void reserveTank8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveTank8ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun sÃ¤iliÃ¶8 varataan?
    	if (signIn.isSelected()){
    		if (reserveTankButtons[7].isSelected()){
    			try{
    				tehdas.sailionVaraus(7);
    			}catch (RemoteException e) {System.out.println(e);}
    		} //if start
    		else{
				try{
					tehdas.sailionVarausVapautus(7);
				} catch (RemoteException e) {System.out.println(e);}
			}//else	
    }// if log
    }//GEN-LAST:event_reserveTank8ActionPerformed

    //---------------- RESERVE/UNRESERVE TANK 9 --------------------
    private void reserveTank9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveTank9ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun sÃ¤iliÃ¶9 varataan?
    	if (signIn.isSelected()){
    		if (reserveTankButtons[8].isSelected()){
    			try{
    				tehdas.sailionVaraus(8);
    			}catch (RemoteException e) {System.out.println(e);}
    		} //if start
    		else{
				try{
					tehdas.sailionVarausVapautus(8);
				} catch (RemoteException e) {System.out.println(e);}
			}//else	
    }// if log
    }//GEN-LAST:event_reserveTank9ActionPerformed

    //---------------- RESERVE/UNRESERVE TANK 10 --------------------
    private void reserveTank10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveTank10ActionPerformed
        //  MitÃ¤ tehdÃ¤Ã¤n kun sÃ¤iliÃ¶10 varataan?
    	if (signIn.isSelected()){
    		if (reserveTankButtons[9].isSelected()){
    			try{
    				tehdas.sailionVaraus(9);
    			}catch (RemoteException e) {System.out.println(e);}
    		} //if start
    		else{
				try{
					tehdas.sailionVarausVapautus(9);
				} catch (RemoteException e) {System.out.println(e);}
			}//else	
    }// if log
    }//GEN-LAST:event_reserveTank10ActionPerformed

    //---------------- TURHIA  --------------------
    private void procLoadAmount2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procLoadAmount2ActionPerformed
        //  Prosessoreiden tÃ¤ytÃ¶n mÃ¤Ã¤rÃ¤
    	
    	// Jos prosessoreiden tÃ¤ytÃ¶n mÃ¤Ã¤rÃ¤n kentÃ¤ssÃ¤ painetaan enteriÃ¤
    	// TÃ¤tÃ¤ ei siis tarvita. Hoidettu muualla
    }//GEN-LAST:event_procLoadAmount2ActionPerformed

    private void procLoadAmount1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procLoadAmount1ActionPerformed
        //  Prosessoreiden tÃ¤ytÃ¶n mÃ¤Ã¤rÃ¤
    	
    	// Jos prosessoreiden tÃ¤ytÃ¶n mÃ¤Ã¤rÃ¤n kentÃ¤ssÃ¤ painetaan enteriÃ¤
    	// TÃ¤tÃ¤ ei siis tarvita. Hoidettu muualla
    }//GEN-LAST:event_procLoadAmount1ActionPerformed
    
    
    // ---------- UPDATE ---------- //
    
    /**
     * Method for updating information on the client.
     * @throws RemoteException 
     */
    public void update() throws RemoteException{ //Is it okay to add throw?
    	
    	//>>> UPDATE LABELS <<<
    	
    	//Update silo labels to show amount of material
    	int[] siiloissa = tehdas.siilojenAineMaara();
    	
    	for(int i = 0; i < siiloissa.length; i++){
    		siloLabels[i].setText(Integer.toString(siiloissa[i]) + " kg");
    	}
    	
    	//Update coveyer status labels
    	for (int i = 0; i < 3; i++){
    		if (tehdas.nappiRuuvikuljettimet()[i]){
    			conveyerStatus[i].setText("Running");
    		}
    		else{
    			conveyerStatus[i].setText("Waiting");
    		}
    	}
    	
    	//Update pump labels
    	for (int i = 0; i < 4; i++){
    		if (tehdas.nappiPumput()[i]){
    			pumpStatus[i].setText("Running");
    		}
    		else{
        		pumpStatus[i].setText("Waiting");
    		}
    	}
    	

    	//Update processor status labels 
    	for(int i = 0; i < processorLabels.length; i++){
    		processorLabels[i].setText(tehdas.prosessorienTila()[i]);	
    	}
    	
    	
    	//Update processor amount labels
    	for(int i = 0; i < processorStatus.length; i++){
    		processorStatus[i].setText(tehdas.prosessorienEdistyminen()[i]);
    	}
    	
    	//Update processor user
    	for (int i = 0; i < 3; i++){
    		if (tehdas.nappiProsessoritReserved()[i]){
    			processorAmount[i].setText(tehdas.prosessorinKayttaja(i));
    		}
    		else{
    			processorAmount[i].setText("-");
    		}
    	}
    	
    	
    	//Update tank labels
    	int[] sailioissa = tehdas.sailioidenJuomanMaara();
    	
    	for(int i = 0; i < sailioissa.length; i++){
    		tankLabels[i].setText(Integer.toString(sailioissa[i]) + " l");
    	}
    	
    	//>>> UPDATE BUTTONS <<<
    	
    	//Update startSiloLoad & startProcLoad-buttons
    	boolean[] conveyers = tehdas.nappiRuuvikuljettimet();
    	
    	for(int i = 0; i < conveyers.length; i++){
    		conveyerStartButtons[i].setSelected(conveyers[i]);
    	}
    	
    	//Update reserveSilo-buttons
    	boolean[] siilonapit = tehdas.nappiSiilot();
    	
    	for(int i = 0; i < siilonapit.length; i++){
    		reserveSiloButtons[i].setSelected(siilonapit[i]);
    	}
    	
    	//Update startProc-buttons
    	boolean[] prosStart = tehdas.nappiProsessoritStart();
    	
    	for(int i = 0; i < prosStart.length; i++){
    		startProcessorButtons[i].setSelected(prosStart[i]);
    	}
    	
    	//Update reserveProc-buttons
    	boolean[] prosReserve = tehdas.nappiProsessoritReserved();
    	
    	for(int i = 0; i < prosReserve.length; i++){
    		reserveProcessorButtons[i].setSelected(prosReserve[i]);
    	}
    	
    	//Update startPump & startBPump-buttons
    	boolean[] nappiPumput = tehdas.nappiPumput();
    	
    	for(int i = 0; i < nappiPumput.length; i++){
    		startPumpButtons[i].setSelected(nappiPumput[i]);
    	}
    	
    	//Update reserveTank-buttons
    	boolean[] nappiTankit = tehdas.nappiKypsytyssailiot();
    	
    	for(int i = 0; i < nappiTankit.length; i++){
    		reserveTankButtons[i].setSelected(nappiTankit[i]);
    	}
    	
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
    		
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	
            	// Argumenttina osoite. Jos ei annettumitÃ¤Ã¤n nii oletus osoite on localhost
            	String os;
            	if (args.length < 1){
            		os = "localhost";
            	}
            	else {
            		os = args[0];
            	}
            	
            	//MainWindow-luokan kontruktorille annetaan parametrina osoite
                new MainWindow(os).setVisible(true);
            }
        }); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ProcLoadConvStatus1;
    private javax.swing.JLabel bpump1Label;
    private javax.swing.JLabel bpump1Status;
    private javax.swing.JLabel bpump2Label;
    private javax.swing.JLabel bpump2Status;
    private javax.swing.JPanel bpumpPanel;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JLabel proc1Label;
    private javax.swing.JLabel proc1Status;
    private javax.swing.JLabel proc1User;
    private javax.swing.JLabel proc2Label;
    private javax.swing.JLabel proc2Status;
    private javax.swing.JLabel proc2User;
    private javax.swing.JLabel proc3Label;
    private javax.swing.JLabel proc3Status;
    private javax.swing.JLabel proc3User;
    private javax.swing.JTextField procLoadAmount1;
    private javax.swing.JTextField procLoadAmount2;
    private javax.swing.JLabel procLoadConvStatus2;
    private javax.swing.JLabel procLoadLabel1;
    private javax.swing.JLabel procLoadLabel2;
    private javax.swing.JPanel procLoadPanel;
    private javax.swing.JPanel procPanel;
    private javax.swing.JLabel pump1Label;
    private javax.swing.JLabel pump1Status;
    private javax.swing.JLabel pump2Label;
    private javax.swing.JLabel pump2Status;
    private javax.swing.JPanel pumpPanel;
    private javax.swing.JToggleButton reserveProc1;
    private javax.swing.JToggleButton reserveProc2;
    private javax.swing.JToggleButton reserveProc3;
    private javax.swing.JToggleButton reserveSilo1;
    private javax.swing.JToggleButton reserveSilo2;
    private javax.swing.JToggleButton reserveSilo3;
    private javax.swing.JToggleButton reserveSilo4;
    private javax.swing.JToggleButton reserveTank1;
    private javax.swing.JToggleButton reserveTank10;
    private javax.swing.JToggleButton reserveTank2;
    private javax.swing.JToggleButton reserveTank3;
    private javax.swing.JToggleButton reserveTank4;
    private javax.swing.JToggleButton reserveTank5;
    private javax.swing.JToggleButton reserveTank6;
    private javax.swing.JToggleButton reserveTank7;
    private javax.swing.JToggleButton reserveTank8;
    private javax.swing.JToggleButton reserveTank9;
    private javax.swing.JToggleButton signIn;
    private javax.swing.JLabel silo1Label;
    private javax.swing.JLabel silo1Status;
    private javax.swing.JLabel silo2Label;
    private javax.swing.JLabel silo2Status;
    private javax.swing.JLabel silo3Label;
    private javax.swing.JLabel silo3Status;
    private javax.swing.JLabel silo4Label;
    private javax.swing.JLabel silo4Status;
    private javax.swing.JLabel siloLoadConvStatus;
    private javax.swing.JLabel siloLoadLabel;
    private javax.swing.JPanel siloLoadPanel;
    private javax.swing.JPanel siloPanel;
    private javax.swing.JToggleButton startBpump1;
    private javax.swing.JToggleButton startBpump2;
    private javax.swing.JToggleButton startProc1;
    private javax.swing.JToggleButton startProc2;
    private javax.swing.JToggleButton startProc3;
    private javax.swing.JToggleButton startProcLoad1;
    private javax.swing.JToggleButton startProcLoad2;
    private javax.swing.JToggleButton startPump1;
    private javax.swing.JToggleButton startPump2;
    private javax.swing.JToggleButton startSiloLoad;
    private javax.swing.JLabel tank10Label;
    private javax.swing.JLabel tank10Status;
    private javax.swing.JLabel tank1Label;
    private javax.swing.JLabel tank1Status;
    private javax.swing.JLabel tank2Label;
    private javax.swing.JLabel tank2Status;
    private javax.swing.JLabel tank3Label;
    private javax.swing.JLabel tank3Status;
    private javax.swing.JLabel tank4Label;
    private javax.swing.JLabel tank4Status;
    private javax.swing.JLabel tank5Label;
    private javax.swing.JLabel tank5Status;
    private javax.swing.JLabel tank6Label;
    private javax.swing.JLabel tank6Status;
    private javax.swing.JLabel tank7Label;
    private javax.swing.JLabel tank7Status;
    private javax.swing.JLabel tank8Label;
    private javax.swing.JLabel tank8Status;
    private javax.swing.JLabel tank9Label;
    private javax.swing.JLabel tank9Status;
    private javax.swing.JPanel tankPanel;
    private javax.swing.JTextField userName;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables
}
